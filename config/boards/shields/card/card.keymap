/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };
 
/* Layers */
#define AL1 0
#define GM 1
#define AL2 2
#define AL2U 8
#define SM1 3
#define SM2 4	
#define NM1 5	
#define SYS 6
#define BT 7	
/ { 
    combos {
        compatible = "zmk,combos";
        combo_game {
            timeout-ms = <30>;
	    key-positions = <2 3 4 5>;
            bindings = <&to GM>;
        };
        combo_sys {
            timeout-ms = <30>;
	    key-positions = <4 5 6>;
            bindings = <&to SYS>;
        };
        combo_caps {
            timeout-ms = <30>;
	    key-positions = <12 13 14>;
            bindings = <&caps_word>;
        };
        combo_bt  {
            timeout-ms = <10>;
            key-positions = <13 14>;
            bindings = <&to BT>;
	    layers = <SM1>; 
        };
        lalt {
            timeout-ms = <20>;
	    key-positions = <10 11>;
            bindings = <&kp LALT>; 
	    layers = <SYS>; 
        };
        lclk {
            timeout-ms = <20>;
	    key-positions = <12	13>;
            bindings = <&mkp LCLK>;
	    layers = <SYS>;
        };
        rclk {
            timeout-ms = <20>;
	    key-positions = <4 5>;
            bindings = <&mkp RCLK>;
	    layers = <SYS>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        sr: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;
	    retro-tap;
        };
        hl: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&sl>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	alpha2macro: behavior_macro_1 {
		compatible = "zmk,behavior-macro";
		label = "MACRO1";
		#binding-cells = <0>;
		bindings = < &sl AL2 >;
	};

//   00 01 02 03		04 05 06 07
//   08 09 10 11		12 13 14 15
//   16 17 18 19		20 21 22 23
//            24		25
    };
       keymap {
                compatible = "zmk,keymap";
                
       		alpha1 {
		bindings = <
		&hm LGUI Q 	&hm LALT W 		&hm LCTL F 		&hm LSHIFT P			&hm LSHIFT L 	&hm RCTL U    	&hm RALT Y	&hm RGUI SQT  
		&hl NM1 A	&hl SM2 R		&hl SM1 S		&hl SYS T 	 			&hl SYS N   	&hl SM1 E     	&hl SM2 I 	&hl NM1 O
		&kp Z	 	&kp X 			&kp C 			&kp D				 	&kp H			&kp COMMA		&kp DOT		&kp SLASH
													&kp SPC					&alpha2macro
		>;
		};
       		game {
		bindings = <
		&trans 		&kp L 			&kp G 			&kp D					&hm RGUI H 		&hm RALT U    	&hm RCTL O	&trans  
		&kp I		&kp S			&kp R			&kp T 		 			&hl SYS N    	&hl SM1 E   	&hl SM2  A 	&hl NM1 C
		&trans	 	&trans 			&trans 			&kp SPC 				&sl AL2			&trans 			&trans		&trans
													&kp SPC	 				&sl AL2
		>;
		};
       		alpha2 {
		bindings = <
		&trans 	 	&trans 			&trans			&kp B	 	 			&kp J    		&trans			&trans 		&trans
		&trans	 	&trans			&kp V			&kp G 					&kp M 			&kp K			&trans		&trans 
		&trans	 	&trans 			&trans 			&kp V	 				&kp K			&trans			&trans		&trans
													&sk LSHIFT	 			&trans
		>;
		};
		
       		sym1 {
		bindings = <
		&trans 		&kp RA(N5)  	&kp LS(N3)		&kp DLLR	    		&kp LS(COMMA)	&kp LS(DOT)		&kp CARET	&trans
		&kp GRAVE	&kp TILDE 		&td PLUS MINUS  &kp BSLH	 			&kp LBKT		&kp RBKT	 	&kp PIPE 	&kp SLASH
		&kp EQUAL	&trans  		&kp UNDER		&trans  				&trans			&trans 			&trans  	&trans
							 						&trans		 			&trans
		>;
		};
			sym2 {
		bindings = <
		&trans		&kp ATSN		&kp QMARK		&kp SQT					&kp LPRN		&kp RPRN 	&kp SEMI 	&trans
		&kp STAR  	&kp PRCNT		&td QMARK EXCL  &kp DQT   				&kp LBRC  		&kp RBRC	&kp AMPS	&kp COLON 
		&trans 		&trans 			&trans  		&trans 					&trans 			&trans 		&trans 		&trans   
						 							&trans					&trans

		>;
		};

			num {
		bindings = <
		&hm LGUI DOT		&hm LALT N7	 	&hm LCTL N8		&hm LSHIFT N9 		&hm LSHIFT F7 	&hm RCTL F8  	&hm RALT F9 &hm RGUI F10
		&td PLUS MINUS		&kp N4  		&kp N5			&kp N6				&kp F4  		&kp F5			&kp F6   	&kp F11
		&kp EQUAL  			&kp N1 			&kp N2			&kp N3		 		&kp F1 			&kp F2			&kp F3  	&kp F12
															&kp N0	 	 		&trans
		>;
		};

			sys {
		bindings = <
		&kp ESC				&trans			&kp LC(LS(TAB))		&kp RC(TAB)				&td LC(V) LC(C) 	&kp RGUI 		&kp BKSP		&trans
		&td LG(GRAVE) TAB	&td HOME DEL	&td END LG(LBKT) 	&kp LG(RBKT)			&kp LEFT	  		&kp DOWN 		&kp UP	 		&kp RIGHT 
		&trans	 			&trans 		 	&trans				&kp C_PP	 			&kp C_PREV			&kp C_VOL_DN 	&kp C_VOL_UP	&kp C_NEXT 	   
									 							&kp LSHIFT		 		&kp RET
		>;
		};

			bt {
		bindings = <
		&trans		&bt BT_PRV	&bt BT_NXT	&trans 			&trans 	&trans	&trans	&trans
		&bootloader	&trans 		&trans 		&trans 			&trans 	&trans 	&trans	&bt BT_CLR
		&trans 	 	&trans 		&trans		&trans			&trans  &trans  &trans 	&bt BT_CLR
						 					&to AL1			&trans
		>;
		};

       		alpha2cap {
		bindings = <
		&trans 	 	&kp LS(V)	&kp LS(W)	&kp LS(M) 	 		&kp LS(F)    	&trans		&kp LS(Z)	&trans 
		&kp LS(Q) 	&kp LS(J) 	&kp LS(P)	&kp LS(K)			&kp LS(B)		&kp COMMA	&kp LS(X)	&kp LS(Y) 
		&trans	 	&trans 		&trans 		&trans 				&kp LA(SEMI)	&trans		&trans		&trans
											&trans	 			&trans
		>;
		};
        
	};
};
